#!/sbin/openrc-run
# Copyright 2020 Andreas K. HÃ¼ttel
# Distributed under the terms of the GNU General Public License v2

CHR="${RC_SVCNAME#*.}"

CHR_BASEDIR="/chroot"

CHR_DIR="${CHR_BASEDIR}/$CHR"

GLOBAL_GENTOO="/var/db/repos/gentoo"
GLOBAL_DISTFILES="/var/cache/distfiles"

CHR_GENTOO="/var/db/repos/gentoo"
CHR_DISTFILES="/var/cache/distfiles"

depend() {
	need localmount udev logger
	after qemu-binfmt
}

checkconfig() {
	if [ ${CHR} = "chr" ]; then
		eerror "You cannot call chr directly. You must create a symbolic link to it with the chroot name:"
		eerror "	ln -s /etc/init.d/chr /etc/init.d/chr.amd64-stable"
		eerror "And then call that instead:"
		eerror "	/etc/init.d/chr.amd64-stable start"
		return 1
	fi
}

start() {
	checkconfig || return $?

	mount --types proc /proc "${CHR_DIR}/proc"
	mount --rbind /sys "${CHR_DIR}/sys"
	mount --make-rslave "${CHR_DIR}/sys"
	mount --rbind /dev "${CHR_DIR}/dev"
	mount --make-rslave "${CHR_DIR}/dev"

	mount --rbind "${GLOBAL_GENTOO}" "${CHR_DIR}/${CHR_GENTOO}"
	mount --rbind "${GLOBAL_DISTFILES}" "${CHR_DIR}/${CHR_DISTFILES}"

	cp --dereference /etc/resolv.conf "${CHR_DIR}/etc/"
	echo "export PS1=\"(${CHR} chroot) \${PS1}\"" > "${CHR_DIR}/etc/bash/bashrc.d/chr"
	chmod +x "${CHR_DIR}/etc/bash/bashrc.d/chr"

	cat > "/usr/bin/chr.${CHR}" <<-OUTERBIN
		#!/bin/bash
		echo "Entering ${CHR} chroot ..."
		nice chroot "${CHR_DIR}" /bin/bash "/.chr.enter"
		echo "Leaving ${CHR} chroot ..."
	OUTERBIN
	chmod +x "/usr/bin/chr.${CHR}"

	cat > "${CHR_DIR}/.chr.enter" <<-INNERBIN
		echo System is `uname -m`
		env-update
		echo Starting chroot shell.
		echo
		/bin/bash --login
		echo
		echo Chroot shell was closed.
	INNERBIN
	chmod +x "${CHR_DIR}/.chr.enter"
}

stop() {
	checkconfig || return $?

	rm "/usr/bin/chr.${CHR}"

	umount "${CHR_DIR}/${CHR_DISTFILES}"
	umount "${CHR_DIR}/${CHR_GENTOO}"

	umount -R "${CHR_DIR}/dev"
	umount -R "${CHR_DIR}/sys"
	umount -R "${CHR_DIR}/proc"
}
